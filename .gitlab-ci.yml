image: docker:stable

services:
  - name: docker:dind
    command: ["--experimental"]

stages:
  - build
  - deploy
  - registry

variables:
  DOCKER_HOST: tcp://docker:2375/
  DOCKER_DRIVER: overlay2
  CONTAINER_TAG: ci$CI_PIPELINE_ID
  CONTAINER_IMAGE: $CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/ubuntu-gtest
  CONTAINER_TAR_FILE: $CI_PROJECT_NAMESPACE.$CI_PROJECT_NAME.ubuntu-gtest.$TARGET_ARCH-ci$CI_PIPELINE_ID.tar
  CONTAINER_CACHE_FROM: $CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/ubuntu-gtest:$TARGET_ARCH-latest

before_script:
  - printenv
  - apk update
  - apk add make
  - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
  - docker info

###################################################################################################

## Build Image template
.build:
  stage: build
  script: 
    - docker pull $CONTAINER_CACHE_FROM || echo "docker pull failed, ignoring."
    - make build
    - docker save --output $CONTAINER_TAR_FILE $CONTAINER_IMAGE:$TARGET_ARCH-$CONTAINER_TAG
  artifacts:
    paths:
      - $CONTAINER_TAR_FILE
    expire_in: 1 day
  only:
    variables:
      - $TARGET_ARCH

## Deploy Image template
.deploy:
  stage: deploy
  script:
    - docker load --input $CONTAINER_TAR_FILE
    - docker tag $CONTAINER_IMAGE:$TARGET_ARCH-$CONTAINER_TAG $CI_REGISTRY/$CONTAINER_IMAGE:$TARGET_ARCH-latest
    - docker push $CI_REGISTRY/$CONTAINER_IMAGE:$TARGET_ARCH-latest
  only:
    variables:
      - $TARGET_ARCH
    refs:
      - master

###################################################################################################

### Intel
build:x86_64:
  extends: .build
  variables:
    TARGET_ARCH: x86_64

deploy:x86_64:
  extends: .deploy
  variables:
    TARGET_ARCH: x86_64
  dependencies:
    - build:x86_64

###################################################################################################

### ARMv7
build:armhf:
  extends: .build
  variables:
    TARGET_ARCH: armhf

deploy:armhf:
  extends: .deploy
  variables:
    TARGET_ARCH: armhf
  dependencies:
    - build:armhf

###################################################################################################

manifest:
  stage: registry
  before_script:
    - printenv
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - export DOCKER_CLI_EXPERIMENTAL=enabled
    - docker info
  script:
    - export REGISTRY_IMAGE=$CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/ubuntu-gtest
    - docker manifest create $REGISTRY_IMAGE:latest
        $REGISTRY_IMAGE:x86_64-latest
        $REGISTRY_IMAGE:armhf-latest
    - docker manifest annotate $REGISTRY_IMAGE:latest $REGISTRY_IMAGE:x86_64-latest --arch amd64 --os Linux
    - docker manifest annotate $REGISTRY_IMAGE:latest $REGISTRY_IMAGE:armhf-latest --arch arm --os Linux
    - docker manifest push $REGISTRY_IMAGE:latest
  dependencies: []
  only:
    refs:
      - master
